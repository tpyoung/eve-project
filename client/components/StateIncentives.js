'use strict';
import React from 'react';
import styles from './StateIncentives.scss';

const StateIncentives = React.createClass({
  render: function(){
    const iconArray = [
      "M19.8690537,19.8396552 L19.8690537,23.0931034 C20.9516624,22.9017241 21.5248082,22.4551724 21.5248082,21.6258621 L21.5248082,21.562069 C21.5248082,20.7327586 21.142711,20.2862069 19.8690537,19.8396552 L19.8690537,19.8396552 Z@PATHCR@M18.4043478,0.510344828 C8.46982097,0.510344828 0.445780051,8.54827586 0.445780051,18.5 C0.445780051,28.4517241 8.46982097,36.4896552 18.4043478,36.4896552 C28.3388747,36.4896552 36.3629156,28.4517241 36.3629156,18.5 C36.3629156,8.54827586 28.3388747,0.510344828 18.4043478,0.510344828 L18.4043478,0.510344828 Z M24.9,21.3706897 C24.9,23.9224138 22.9258312,25.5810345 19.9964194,25.9 L19.9964194,28.1965517 L17.5764706,28.1965517 L17.5764706,25.8362069 C15.6023018,25.5810345 13.6918159,24.8155172 12.1634271,23.6672414 L13.9465473,21.0517241 C15.2202046,22.0086207 16.3664962,22.6465517 17.7038363,22.9017241 L17.7038363,19.2655172 C14.3923274,18.3724138 12.7365729,17.0965517 12.7365729,14.3534483 L12.7365729,14.2896552 C12.7365729,11.737931 14.6470588,10.0793103 17.5764706,9.76034483 L17.5764706,8.42068966 L19.9964194,8.42068966 L19.9964194,9.82413793 C21.6521739,10.0793103 23.0531969,10.6534483 24.2631714,11.5465517 L22.7347826,14.2258621 C21.8432225,13.587931 20.8242967,13.1413793 19.8690537,12.8862069 L19.8690537,16.3948276 C23.3716113,17.3517241 24.9,18.7551724 24.9,21.3706897 L24.9,21.3706897 L24.9,21.3706897 Z@PATHCR@M16.1754476,14.162069 L16.1754476,14.162069 C16.1754476,14.9275862 16.4938619,15.3741379 17.7675192,15.8206897 L17.7675192,12.6948276 C16.6212276,12.8224138 16.1754476,13.3965517 16.1754476,14.162069 L16.1754476,14.162069 Z",
      "M17.9585678,0 C8.02404092,0 0,8.03793103 0,17.9896552 C0,27.9413793 8.02404092,35.9793103 17.9585678,35.9793103 C27.8930946,35.9793103 35.9171355,27.9413793 35.9171355,17.9896552 C35.9171355,8.03793103 27.9567775,0 17.9585678,0 L17.9585678,0 Z M14.2012788,29.6 L16.8122762,20.6051724 L10.3803069,20.6051724 L15.0928389,7.91034483 L22.9258312,7.91034483 L22.786445,15.7568966 L26.9378517,15.7568966 L14.2012788,29.6 L14.2012788,29.6 Z",
      "M17.9585678,0.510344828 C8.02404092,0.510344828 -1.0658141e-14,8.54827586 -1.0658141e-14,18.5 C-1.0658141e-14,28.4517241 8.02404092,36.4896552 17.9585678,36.4896552 C27.8930946,36.4896552 35.9171355,28.4517241 35.9171355,18.5 C35.9171355,8.54827586 27.9567775,0.510344828 17.9585678,0.510344828 L17.9585678,0.510344828 Z M18.1496164,32.0241379 L9.36138107,18.6275862 L18.1496164,5.23103448 L26.9378517,18.6275862 L18.1496164,32.0241379 L18.1496164,32.0241379 Z@POLYGONHOV@11.3992327 18.6275862 18.1496164 28.8982759 24.9 18.6275862 18.1496164 8.42068966",
      "M17.9585678,0 C8.02404092,0 0,8.03793103 0,17.9896552 C0,27.9413793 8.02404092,35.9793103 17.9585678,35.9793103 C27.8930946,35.9793103 35.9171355,27.9413793 35.9171355,17.9896552 C35.9171355,8.03793103 27.9567775,0 17.9585678,0 L17.9585678,0 Z M19.6780051,17.4155172 C19.6780051,20.5413793 20.4421995,21.4982759 21.5248082,22.9017241 C22.6710997,24.3689655 22.8621483,26.2189655 21.9705882,27.8137931 C21.0790281,29.4086207 19.3595908,30.3655172 17.385422,30.3655172 C17.1943734,30.3655172 16.9396419,30.3655172 16.7485934,30.3017241 C15.4112532,30.1741379 14.3286445,29.6 13.5644501,28.7068966 C12.6092072,27.4948276 12.2907928,25.7724138 12.5455243,23.5396552 C12.8002558,21.3068966 12.4818414,19.6482759 11.5902813,18.6275862 C10.1255754,17.0327586 7.32352941,17.1603448 5.03094629,17.2241379 L4.52148338,17.2241379 L4.45780051,15.9482759 L4.96726343,15.9482759 C7.51457801,15.8844828 10.6987212,15.7568966 12.5455243,17.7982759 C13.7554987,19.0741379 14.1375959,21.0517241 13.8191816,23.7310345 C13.5644501,25.5810345 13.8191816,27.0482759 14.583376,27.9413793 C15.0928389,28.5793103 15.8570332,28.962069 16.8759591,29.0896552 C18.6590793,29.2810345 20.187468,28.5793103 20.8879795,27.2396552 C21.5248082,26.0913793 21.3974425,24.8155172 20.5058824,23.7310345 C19.1685422,22.0724138 18.4043478,20.8603448 18.4043478,17.4793103 C15.6659847,17.1603448 13.5644501,14.8 13.5644501,11.9931034 C13.5644501,11.1 13.7554987,10.2706897 14.1375959,9.50517241 L14.1375959,9.50517241 L14.1375959,9.50517241 C14.1375959,9.37758621 14.9654731,9.3137931 16.1754476,9.25 L16.1754476,5.86896552 L16.6849105,5.86896552 L16.6849105,9.1862069 C17.1943734,9.1862069 17.831202,9.1862069 18.4043478,9.12241379 L18.4043478,5.74137931 C18.4043478,5.35862069 18.6590793,5.10344828 19.0411765,5.10344828 C19.4232737,5.10344828 19.6780051,5.35862069 19.6780051,5.74137931 L19.6780051,9.12241379 C20.3148338,9.12241379 20.8879795,9.12241379 21.3974425,9.1862069 L21.3974425,5.86896552 L21.9069054,5.86896552 L21.9069054,9.1862069 C23.1168798,9.25 23.944757,9.3137931 23.944757,9.44137931 L23.944757,9.44137931 L23.944757,9.44137931 C24.3268542,10.2068966 24.5179028,11.0362069 24.5179028,11.9293103 C24.5815857,14.8 22.4163683,17.1603448 19.6780051,17.4155172 L19.6780051,17.4155172 Z",
      "M19.6143223,14.162069 C19.2959079,14.0982759 18.6590793,14.0982759 17.7038363,14.0982759 L16.430179,14.0982759 L16.430179,17.862069 L17.8948849,17.862069 C18.9774936,17.862069 19.6780051,17.7982759 19.9964194,17.6706897 C20.3785166,17.5431034 20.6332481,17.287931 20.8242967,17.0327586 C21.0153453,16.7137931 21.142711,16.3948276 21.142711,16.012069 C21.142711,15.5017241 21.0153453,15.1189655 20.6969309,14.8 C20.3785166,14.4810345 20.0601023,14.2896552 19.6143223,14.162069 L19.6143223,14.162069 Z@PATHPARK@M18.4043478,0.510344828 C8.46982097,0.510344828 0.445780051,8.54827586 0.445780051,18.5 C0.445780051,28.4517241 8.46982097,36.4896552 18.4043478,36.4896552 C28.3388747,36.4896552 36.3629156,28.4517241 36.3629156,18.5 C36.3629156,8.54827586 28.3388747,0.510344828 18.4043478,0.510344828 L18.4043478,0.510344828 Z M28.7846547,26.9206897 C28.7846547,27.9413793 27.9567775,28.8344828 26.8741688,28.8344828 L9.61611253,28.8344828 C8.5971867,28.8344828 7.7056266,28.0051724 7.7056266,26.9206897 L7.7056266,9.63275862 C7.7056266,8.61206897 8.53350384,7.71896552 9.61611253,7.71896552 L26.8741688,7.71896552 C27.8930946,7.71896552 28.7846547,8.54827586 28.7846547,9.63275862 L28.7846547,26.9206897 L28.7846547,26.9206897 Z@PATHPARK@M26.8741688,9.05862069 L9.61611253,9.05862069 C9.29769821,9.05862069 8.97928389,9.3137931 8.97928389,9.69655172 L8.97928389,26.9844828 C8.97928389,27.3034483 9.23401535,27.6224138 9.61611253,27.6224138 L26.8741688,27.6224138 C27.1925831,27.6224138 27.5109974,27.3672414 27.5109974,26.9844828 L27.5109974,9.69655172 C27.5109974,9.3137931 27.1925831,9.05862069 26.8741688,9.05862069 L26.8741688,9.05862069 Z M23.4352941,17.9896552 C23.1168798,18.5637931 22.7347826,19.0103448 22.2890026,19.3293103 C21.8432225,19.6482759 21.3974425,19.8396552 20.8879795,19.9672414 C20.2511509,20.0948276 19.2959079,20.1586207 18.0859335,20.1586207 L16.3028133,20.1586207 L16.3028133,25.1982759 L13.628133,25.1982759 L13.628133,11.8655172 L17.9585678,11.8655172 C19.6143223,11.8655172 20.6332481,11.9293103 21.142711,12.0568966 C21.9069054,12.2482759 22.543734,12.6948276 23.0531969,13.3327586 C23.5626598,14.0344828 23.8173913,14.8637931 23.8173913,15.9482759 C23.8810742,16.7775862 23.7537084,17.4793103 23.4352941,17.9896552 L23.4352941,17.9896552 Z",
      "M20.8242967,7.4 L20.6332481,7.20862069 L9.74347826,7.20862069 L9.74347826,28.2603448 L27.1289003,28.2603448 L27.1289003,13.7155172 L26.8741688,13.4603448 L20.8242967,13.4603448 L20.8242967,7.4 L20.8242967,7.4 Z M17.7675192,8.86724138 C17.8948849,8.67586207 18.1496164,8.54827586 18.4043478,8.54827586 C18.6590793,8.54827586 18.9138107,8.67586207 19.0411765,8.86724138 C19.2322251,9.12241379 19.2959079,9.50517241 19.2959079,10.0155172 C19.2959079,10.5258621 19.2322251,10.9086207 19.0411765,11.1637931 C18.9138107,11.3551724 18.6590793,11.4827586 18.4043478,11.4827586 C18.1496164,11.4827586 17.8948849,11.3551724 17.7675192,11.1637931 C17.6401535,10.9724138 17.5127877,10.5896552 17.5127877,10.0155172 C17.5127877,9.44137931 17.6401535,9.05862069 17.7675192,8.86724138 L17.7675192,8.86724138 Z M15.2202046,10.3344828 L16.430179,8.54827586 L16.8759591,8.54827586 L16.8759591,10.3344828 L17.2580563,10.3344828 L17.2580563,10.8448276 L16.8759591,10.8448276 L16.8759591,11.4189655 L16.3664962,11.4189655 L16.3664962,10.8448276 L15.2202046,10.8448276 L15.2202046,10.3344828 L15.2202046,10.3344828 Z M12.2907928,11.4189655 L11.7176471,11.4189655 L11.7176471,9.37758621 C11.5265985,9.56896552 11.271867,9.69655172 11.0171355,9.76034483 L11.0171355,9.25 C11.1445013,9.1862069 11.3355499,9.12241379 11.4629156,8.99482759 C11.6539642,8.86724138 11.7176471,8.73965517 11.7813299,8.54827586 L12.22711,8.54827586 L12.22711,11.4189655 L12.2907928,11.4189655 Z M13.3734015,11.1637931 C13.1823529,10.9724138 13.1186701,10.5896552 13.1186701,10.0155172 C13.1186701,9.50517241 13.1823529,9.12241379 13.3734015,8.86724138 C13.5007673,8.67586207 13.7554987,8.54827586 14.0102302,8.54827586 C14.2649616,8.54827586 14.5196931,8.67586207 14.6470588,8.86724138 C14.8381074,9.12241379 14.9017903,9.50517241 14.9017903,10.0155172 C14.9017903,10.5258621 14.8381074,10.9086207 14.6470588,11.1637931 C14.5196931,11.3551724 14.2649616,11.4827586 14.0102302,11.4827586 C13.7554987,11.4827586 13.5007673,11.3551724 13.3734015,11.1637931 L13.3734015,11.1637931 Z M22.9895141,15.3741379 L24.4542199,16.5224138 L17.7675192,25.1982759 L13.8191816,21.3068966 L15.0928389,20.0310345 L17.5764706,22.4551724 L22.9895141,15.3741379 L22.9895141,15.3741379 Z@TAXCREDIT@M18.2132992,0.510344828 C8.27877238,0.510344828 0.254731458,8.54827586 0.254731458,18.5 C0.254731458,28.4517241 8.27877238,36.4896552 18.2132992,36.4896552 C28.1478261,36.4896552 36.171867,28.4517241 36.171867,18.5 C36.171867,8.54827586 28.1478261,0.510344828 18.2132992,0.510344828 L18.2132992,0.510344828 Z M28.4662404,29.5362069 L8.53350384,29.5362069 L8.53350384,5.93275862 L21.2063939,5.93275862 L28.4662404,13.2051724 L28.4662404,29.5362069 L28.4662404,29.5362069 Z@TAXCREDIT@M18.2769821,10.9724138 C18.340665,11.0362069 18.4043478,11.0362069 18.4680307,11.0362069 C18.5317136,11.0362069 18.5953964,11.0362069 18.6590793,10.9724138 C18.7227621,10.9086207 18.7227621,10.8448276 18.786445,10.7172414 C18.8501279,10.5896552 18.8501279,10.3344828 18.8501279,10.0155172 C18.8501279,9.69655172 18.8501279,9.44137931 18.786445,9.3137931 C18.7227621,9.1862069 18.7227621,9.12241379 18.6590793,9.05862069 C18.5953964,8.99482759 18.5317136,8.99482759 18.4680307,8.99482759 C18.4043478,8.99482759 18.340665,8.99482759 18.2769821,9.05862069 C18.2132992,9.12241379 18.2132992,9.1862069 18.1496164,9.3137931 C18.0859335,9.44137931 18.0859335,9.69655172 18.0859335,10.0155172 C18.0859335,10.3344828 18.0859335,10.5896552 18.1496164,10.7172414 C18.2132992,10.8448276 18.2132992,10.9086207 18.2769821,10.9724138 L18.2769821,10.9724138 Z@TAXCREDIT@M14.2012788,10.9724138 C14.2649616,10.9086207 14.2649616,10.8448276 14.3286445,10.7172414 C14.3923274,10.5896552 14.3923274,10.3344828 14.3923274,10.0155172 C14.3923274,9.69655172 14.3923274,9.44137931 14.3286445,9.3137931 C14.2649616,9.1862069 14.2649616,9.12241379 14.2012788,9.05862069 C14.1375959,8.99482759 14.073913,8.99482759 14.0102302,8.99482759 C13.9465473,8.99482759 13.8828645,8.99482759 13.8191816,9.05862069 C13.7554987,9.12241379 13.7554987,9.1862069 13.6918159,9.3137931 C13.628133,9.44137931 13.628133,9.69655172 13.628133,10.0155172 C13.628133,10.3344828 13.628133,10.5896552 13.6918159,10.7172414 C13.7554987,10.8448276 13.7554987,10.9086207 13.8191816,10.9724138 C13.8828645,11.0362069 13.9465473,11.0362069 14.0102302,11.0362069 C14.073913,11.0362069 14.1375959,10.9724138 14.2012788,10.9724138 L14.2012788,10.9724138 Z@TAXCREDIT@16.3664962 9.37758621 15.7296675 10.3344828 16.3664962 10.3344828"
    ];
    const iconObj = {
      cashRebates: "M19.8690537,19.8396552 L19.8690537,23.0931034 C20.9516624,22.9017241 21.5248082,22.4551724 21.5248082,21.6258621 L21.5248082,21.562069 C21.5248082,20.7327586 21.142711,20.2862069 19.8690537,19.8396552 L19.8690537,19.8396552 Z@PATHCR@M18.4043478,0.510344828 C8.46982097,0.510344828 0.445780051,8.54827586 0.445780051,18.5 C0.445780051,28.4517241 8.46982097,36.4896552 18.4043478,36.4896552 C28.3388747,36.4896552 36.3629156,28.4517241 36.3629156,18.5 C36.3629156,8.54827586 28.3388747,0.510344828 18.4043478,0.510344828 L18.4043478,0.510344828 Z M24.9,21.3706897 C24.9,23.9224138 22.9258312,25.5810345 19.9964194,25.9 L19.9964194,28.1965517 L17.5764706,28.1965517 L17.5764706,25.8362069 C15.6023018,25.5810345 13.6918159,24.8155172 12.1634271,23.6672414 L13.9465473,21.0517241 C15.2202046,22.0086207 16.3664962,22.6465517 17.7038363,22.9017241 L17.7038363,19.2655172 C14.3923274,18.3724138 12.7365729,17.0965517 12.7365729,14.3534483 L12.7365729,14.2896552 C12.7365729,11.737931 14.6470588,10.0793103 17.5764706,9.76034483 L17.5764706,8.42068966 L19.9964194,8.42068966 L19.9964194,9.82413793 C21.6521739,10.0793103 23.0531969,10.6534483 24.2631714,11.5465517 L22.7347826,14.2258621 C21.8432225,13.587931 20.8242967,13.1413793 19.8690537,12.8862069 L19.8690537,16.3948276 C23.3716113,17.3517241 24.9,18.7551724 24.9,21.3706897 L24.9,21.3706897 L24.9,21.3706897 Z@PATHCR@M16.1754476,14.162069 L16.1754476,14.162069 C16.1754476,14.9275862 16.4938619,15.3741379 17.7675192,15.8206897 L17.7675192,12.6948276 C16.6212276,12.8224138 16.1754476,13.3965517 16.1754476,14.162069 L16.1754476,14.162069 Z",
      charging: "M17.9585678,0 C8.02404092,0 0,8.03793103 0,17.9896552 C0,27.9413793 8.02404092,35.9793103 17.9585678,35.9793103 C27.8930946,35.9793103 35.9171355,27.9413793 35.9171355,17.9896552 C35.9171355,8.03793103 27.9567775,0 17.9585678,0 L17.9585678,0 Z M14.2012788,29.6 L16.8122762,20.6051724 L10.3803069,20.6051724 L15.0928389,7.91034483 L22.9258312,7.91034483 L22.786445,15.7568966 L26.9378517,15.7568966 L14.2012788,29.6 L14.2012788,29.6 Z",
      hov: "M17.9585678,0.510344828 C8.02404092,0.510344828 -1.0658141e-14,8.54827586 -1.0658141e-14,18.5 C-1.0658141e-14,28.4517241 8.02404092,36.4896552 17.9585678,36.4896552 C27.8930946,36.4896552 35.9171355,28.4517241 35.9171355,18.5 C35.9171355,8.54827586 27.9567775,0.510344828 17.9585678,0.510344828 L17.9585678,0.510344828 Z M18.1496164,32.0241379 L9.36138107,18.6275862 L18.1496164,5.23103448 L26.9378517,18.6275862 L18.1496164,32.0241379 L18.1496164,32.0241379 Z@POLYGONHOV@11.3992327 18.6275862 18.1496164 28.8982759 24.9 18.6275862 18.1496164 8.42068966",
      install: "M17.9585678,0 C8.02404092,0 0,8.03793103 0,17.9896552 C0,27.9413793 8.02404092,35.9793103 17.9585678,35.9793103 C27.8930946,35.9793103 35.9171355,27.9413793 35.9171355,17.9896552 C35.9171355,8.03793103 27.9567775,0 17.9585678,0 L17.9585678,0 Z M19.6780051,17.4155172 C19.6780051,20.5413793 20.4421995,21.4982759 21.5248082,22.9017241 C22.6710997,24.3689655 22.8621483,26.2189655 21.9705882,27.8137931 C21.0790281,29.4086207 19.3595908,30.3655172 17.385422,30.3655172 C17.1943734,30.3655172 16.9396419,30.3655172 16.7485934,30.3017241 C15.4112532,30.1741379 14.3286445,29.6 13.5644501,28.7068966 C12.6092072,27.4948276 12.2907928,25.7724138 12.5455243,23.5396552 C12.8002558,21.3068966 12.4818414,19.6482759 11.5902813,18.6275862 C10.1255754,17.0327586 7.32352941,17.1603448 5.03094629,17.2241379 L4.52148338,17.2241379 L4.45780051,15.9482759 L4.96726343,15.9482759 C7.51457801,15.8844828 10.6987212,15.7568966 12.5455243,17.7982759 C13.7554987,19.0741379 14.1375959,21.0517241 13.8191816,23.7310345 C13.5644501,25.5810345 13.8191816,27.0482759 14.583376,27.9413793 C15.0928389,28.5793103 15.8570332,28.962069 16.8759591,29.0896552 C18.6590793,29.2810345 20.187468,28.5793103 20.8879795,27.2396552 C21.5248082,26.0913793 21.3974425,24.8155172 20.5058824,23.7310345 C19.1685422,22.0724138 18.4043478,20.8603448 18.4043478,17.4793103 C15.6659847,17.1603448 13.5644501,14.8 13.5644501,11.9931034 C13.5644501,11.1 13.7554987,10.2706897 14.1375959,9.50517241 L14.1375959,9.50517241 L14.1375959,9.50517241 C14.1375959,9.37758621 14.9654731,9.3137931 16.1754476,9.25 L16.1754476,5.86896552 L16.6849105,5.86896552 L16.6849105,9.1862069 C17.1943734,9.1862069 17.831202,9.1862069 18.4043478,9.12241379 L18.4043478,5.74137931 C18.4043478,5.35862069 18.6590793,5.10344828 19.0411765,5.10344828 C19.4232737,5.10344828 19.6780051,5.35862069 19.6780051,5.74137931 L19.6780051,9.12241379 C20.3148338,9.12241379 20.8879795,9.12241379 21.3974425,9.1862069 L21.3974425,5.86896552 L21.9069054,5.86896552 L21.9069054,9.1862069 C23.1168798,9.25 23.944757,9.3137931 23.944757,9.44137931 L23.944757,9.44137931 L23.944757,9.44137931 C24.3268542,10.2068966 24.5179028,11.0362069 24.5179028,11.9293103 C24.5815857,14.8 22.4163683,17.1603448 19.6780051,17.4155172 L19.6780051,17.4155172 Z",
      parking: "M19.6143223,14.162069 C19.2959079,14.0982759 18.6590793,14.0982759 17.7038363,14.0982759 L16.430179,14.0982759 L16.430179,17.862069 L17.8948849,17.862069 C18.9774936,17.862069 19.6780051,17.7982759 19.9964194,17.6706897 C20.3785166,17.5431034 20.6332481,17.287931 20.8242967,17.0327586 C21.0153453,16.7137931 21.142711,16.3948276 21.142711,16.012069 C21.142711,15.5017241 21.0153453,15.1189655 20.6969309,14.8 C20.3785166,14.4810345 20.0601023,14.2896552 19.6143223,14.162069 L19.6143223,14.162069 Z@PATHPARK@M18.4043478,0.510344828 C8.46982097,0.510344828 0.445780051,8.54827586 0.445780051,18.5 C0.445780051,28.4517241 8.46982097,36.4896552 18.4043478,36.4896552 C28.3388747,36.4896552 36.3629156,28.4517241 36.3629156,18.5 C36.3629156,8.54827586 28.3388747,0.510344828 18.4043478,0.510344828 L18.4043478,0.510344828 Z M28.7846547,26.9206897 C28.7846547,27.9413793 27.9567775,28.8344828 26.8741688,28.8344828 L9.61611253,28.8344828 C8.5971867,28.8344828 7.7056266,28.0051724 7.7056266,26.9206897 L7.7056266,9.63275862 C7.7056266,8.61206897 8.53350384,7.71896552 9.61611253,7.71896552 L26.8741688,7.71896552 C27.8930946,7.71896552 28.7846547,8.54827586 28.7846547,9.63275862 L28.7846547,26.9206897 L28.7846547,26.9206897 Z@PATHPARK@M26.8741688,9.05862069 L9.61611253,9.05862069 C9.29769821,9.05862069 8.97928389,9.3137931 8.97928389,9.69655172 L8.97928389,26.9844828 C8.97928389,27.3034483 9.23401535,27.6224138 9.61611253,27.6224138 L26.8741688,27.6224138 C27.1925831,27.6224138 27.5109974,27.3672414 27.5109974,26.9844828 L27.5109974,9.69655172 C27.5109974,9.3137931 27.1925831,9.05862069 26.8741688,9.05862069 L26.8741688,9.05862069 Z M23.4352941,17.9896552 C23.1168798,18.5637931 22.7347826,19.0103448 22.2890026,19.3293103 C21.8432225,19.6482759 21.3974425,19.8396552 20.8879795,19.9672414 C20.2511509,20.0948276 19.2959079,20.1586207 18.0859335,20.1586207 L16.3028133,20.1586207 L16.3028133,25.1982759 L13.628133,25.1982759 L13.628133,11.8655172 L17.9585678,11.8655172 C19.6143223,11.8655172 20.6332481,11.9293103 21.142711,12.0568966 C21.9069054,12.2482759 22.543734,12.6948276 23.0531969,13.3327586 C23.5626598,14.0344828 23.8173913,14.8637931 23.8173913,15.9482759 C23.8810742,16.7775862 23.7537084,17.4793103 23.4352941,17.9896552 L23.4352941,17.9896552 Z",
      taxCredits: "M20.8242967,7.4 L20.6332481,7.20862069 L9.74347826,7.20862069 L9.74347826,28.2603448 L27.1289003,28.2603448 L27.1289003,13.7155172 L26.8741688,13.4603448 L20.8242967,13.4603448 L20.8242967,7.4 L20.8242967,7.4 Z M17.7675192,8.86724138 C17.8948849,8.67586207 18.1496164,8.54827586 18.4043478,8.54827586 C18.6590793,8.54827586 18.9138107,8.67586207 19.0411765,8.86724138 C19.2322251,9.12241379 19.2959079,9.50517241 19.2959079,10.0155172 C19.2959079,10.5258621 19.2322251,10.9086207 19.0411765,11.1637931 C18.9138107,11.3551724 18.6590793,11.4827586 18.4043478,11.4827586 C18.1496164,11.4827586 17.8948849,11.3551724 17.7675192,11.1637931 C17.6401535,10.9724138 17.5127877,10.5896552 17.5127877,10.0155172 C17.5127877,9.44137931 17.6401535,9.05862069 17.7675192,8.86724138 L17.7675192,8.86724138 Z M15.2202046,10.3344828 L16.430179,8.54827586 L16.8759591,8.54827586 L16.8759591,10.3344828 L17.2580563,10.3344828 L17.2580563,10.8448276 L16.8759591,10.8448276 L16.8759591,11.4189655 L16.3664962,11.4189655 L16.3664962,10.8448276 L15.2202046,10.8448276 L15.2202046,10.3344828 L15.2202046,10.3344828 Z M12.2907928,11.4189655 L11.7176471,11.4189655 L11.7176471,9.37758621 C11.5265985,9.56896552 11.271867,9.69655172 11.0171355,9.76034483 L11.0171355,9.25 C11.1445013,9.1862069 11.3355499,9.12241379 11.4629156,8.99482759 C11.6539642,8.86724138 11.7176471,8.73965517 11.7813299,8.54827586 L12.22711,8.54827586 L12.22711,11.4189655 L12.2907928,11.4189655 Z M13.3734015,11.1637931 C13.1823529,10.9724138 13.1186701,10.5896552 13.1186701,10.0155172 C13.1186701,9.50517241 13.1823529,9.12241379 13.3734015,8.86724138 C13.5007673,8.67586207 13.7554987,8.54827586 14.0102302,8.54827586 C14.2649616,8.54827586 14.5196931,8.67586207 14.6470588,8.86724138 C14.8381074,9.12241379 14.9017903,9.50517241 14.9017903,10.0155172 C14.9017903,10.5258621 14.8381074,10.9086207 14.6470588,11.1637931 C14.5196931,11.3551724 14.2649616,11.4827586 14.0102302,11.4827586 C13.7554987,11.4827586 13.5007673,11.3551724 13.3734015,11.1637931 L13.3734015,11.1637931 Z M22.9895141,15.3741379 L24.4542199,16.5224138 L17.7675192,25.1982759 L13.8191816,21.3068966 L15.0928389,20.0310345 L17.5764706,22.4551724 L22.9895141,15.3741379 L22.9895141,15.3741379 Z@TAXCREDIT@M18.2132992,0.510344828 C8.27877238,0.510344828 0.254731458,8.54827586 0.254731458,18.5 C0.254731458,28.4517241 8.27877238,36.4896552 18.2132992,36.4896552 C28.1478261,36.4896552 36.171867,28.4517241 36.171867,18.5 C36.171867,8.54827586 28.1478261,0.510344828 18.2132992,0.510344828 L18.2132992,0.510344828 Z M28.4662404,29.5362069 L8.53350384,29.5362069 L8.53350384,5.93275862 L21.2063939,5.93275862 L28.4662404,13.2051724 L28.4662404,29.5362069 L28.4662404,29.5362069 Z@TAXCREDIT@M18.2769821,10.9724138 C18.340665,11.0362069 18.4043478,11.0362069 18.4680307,11.0362069 C18.5317136,11.0362069 18.5953964,11.0362069 18.6590793,10.9724138 C18.7227621,10.9086207 18.7227621,10.8448276 18.786445,10.7172414 C18.8501279,10.5896552 18.8501279,10.3344828 18.8501279,10.0155172 C18.8501279,9.69655172 18.8501279,9.44137931 18.786445,9.3137931 C18.7227621,9.1862069 18.7227621,9.12241379 18.6590793,9.05862069 C18.5953964,8.99482759 18.5317136,8.99482759 18.4680307,8.99482759 C18.4043478,8.99482759 18.340665,8.99482759 18.2769821,9.05862069 C18.2132992,9.12241379 18.2132992,9.1862069 18.1496164,9.3137931 C18.0859335,9.44137931 18.0859335,9.69655172 18.0859335,10.0155172 C18.0859335,10.3344828 18.0859335,10.5896552 18.1496164,10.7172414 C18.2132992,10.8448276 18.2132992,10.9086207 18.2769821,10.9724138 L18.2769821,10.9724138 Z@TAXCREDIT@M14.2012788,10.9724138 C14.2649616,10.9086207 14.2649616,10.8448276 14.3286445,10.7172414 C14.3923274,10.5896552 14.3923274,10.3344828 14.3923274,10.0155172 C14.3923274,9.69655172 14.3923274,9.44137931 14.3286445,9.3137931 C14.2649616,9.1862069 14.2649616,9.12241379 14.2012788,9.05862069 C14.1375959,8.99482759 14.073913,8.99482759 14.0102302,8.99482759 C13.9465473,8.99482759 13.8828645,8.99482759 13.8191816,9.05862069 C13.7554987,9.12241379 13.7554987,9.1862069 13.6918159,9.3137931 C13.628133,9.44137931 13.628133,9.69655172 13.628133,10.0155172 C13.628133,10.3344828 13.628133,10.5896552 13.6918159,10.7172414 C13.7554987,10.8448276 13.7554987,10.9086207 13.8191816,10.9724138 C13.8828645,11.0362069 13.9465473,11.0362069 14.0102302,11.0362069 C14.073913,11.0362069 14.1375959,10.9724138 14.2012788,10.9724138 L14.2012788,10.9724138 Z@TAXCREDIT@16.3664962 9.37758621 15.7296675 10.3344828 16.3664962 10.3344828"
    };
    var iconsNode;

    //GAS VEHICLES
    if (this.props.vehicleInfo !== undefined &&
      this.props.vehicleInfo.power === "Gas" &&
      this.props.stateInfo !== undefined) {
      var count = 0;
      iconsNode = iconArray.map((icon) => {
        count++;
        if (icon.includes('@POLYGONHOV@')) {
          let polygonIcon = icon.split('@POLYGONHOV@');
          return (
            <Icon key={count} d={polygonIcon[0]} points={polygonIcon[1]} polygon={polygonIcon[1]} className="grayIcon" incentiveName="hov" />
          )
        }
        else if (icon.includes('@PATHCR@')) {
          let cashRebateIcon = icon.split('@PATHCR@');
          return (
            <Icon key={count} dOne={cashRebateIcon[0]} dTwo={cashRebateIcon[1]} dThree={cashRebateIcon[2]} className="grayIcon" incentiveName="cashRebate" /> 
          )
        }
        else if (icon.includes('@PATHPARK@')) {
          let parkingIcon = icon.split('@PATHPARK@');
          return (
            <Icon key={count} dOne={parkingIcon[0]} dTwo={parkingIcon[1]} dThree={parkingIcon[2]} className="grayIcon" incentiveName="parking" /> 
          ) 
        }
        else if (icon.includes('@TAXCREDIT@')) {
          let taxCreditIcon = icon.split('@TAXCREDIT@');
          return (
            <Icon key={count} dOne={taxCreditIcon[0]} dTwo={taxCreditIcon[1]} dThree={taxCreditIcon[2]} dFour={taxCreditIcon[3]} polygon={taxCreditIcon[4]} className="grayIcon" incentiveName="taxCredit" /> 
          )  
        }
        else {
          return (
            <Icon key={count} d={icon} className="grayIcon"/>
          )
        }
      })
    }

    //HYBRID VEHICLES
    else if (this.props.vehicleInfo !== undefined &&
      this.props.vehicleInfo.power === "Plug-In Hybrid" &&
      this.props.stateInfo !== undefined) {
      var trueArr = [];
      var falseArr = [];
      for (var key in this.props.stateInfo.incentivesHybrid) {
        if (this.props.stateInfo.incentivesHybrid[key] === "true") {
          trueArr.push(key)
        }
        else {
          falseArr.push(key)
        }
      }
      var trueNode = trueArr.map((trueKey) => {
        if (iconObj[trueKey].includes('@POLYGONHOV@')) {
          let polygonIcon = iconObj[trueKey].split('@POLYGONHOV@');
          return (
            <Icon key={trueKey} d={polygonIcon[0]} points={polygonIcon[1]} polygon={polygonIcon[1]} className="blueIcon" incentiveName="hov" />
          )
        }
        else if (iconObj[trueKey].includes('@PATHCR@')) {
          let cashRebateIcon = iconObj[trueKey].split('@PATHCR@');
          return (
            <Icon key={trueKey} dOne={cashRebateIcon[0]} dTwo={cashRebateIcon[1]} dThree={cashRebateIcon[2]} className="blueIcon" incentiveName="cashRebate" /> 
          )
        }
        else if (iconObj[trueKey].includes('@PATHPARK@')) {
          let parkingIcon = iconObj[trueKey].split('@PATHPARK@');
          return (
            <Icon key={trueKey} dOne={parkingIcon[0]} dTwo={parkingIcon[1]} dThree={parkingIcon[2]} className="blueIcon" incentiveName="parking" /> 
          ) 
        }
        else if (iconObj[trueKey].includes('@TAXCREDIT@')) {
          let taxCreditIcon = iconObj[trueKey].split('@TAXCREDIT@');
          return (
            <Icon key={trueKey} dOne={taxCreditIcon[0]} dTwo={taxCreditIcon[1]} dThree={taxCreditIcon[2]} dFour={taxCreditIcon[3]} polygon={taxCreditIcon[4]} className="blueIcon" incentiveName="taxCredit" /> 
          )  
        }
        else {
          return (
            <Icon key={trueKey} d={iconObj[trueKey]} className="blueIcon"/>
          )
        }
      });
      var falseNode = falseArr.map((falseKey) => {
        if (iconObj[falseKey].includes('@POLYGONHOV@')) {
          let polygonIcon = iconObj[falseKey].split('@POLYGONHOV@');
          return (
            <Icon key={falseKey} d={polygonIcon[0]} points={polygonIcon[1]} polygon={polygonIcon[1]} className="grayIcon" incentiveName="hov" />
          )
        }
        else if (iconObj[falseKey].includes('@PATHCR@')) {
          let cashRebateIcon = iconObj[falseKey].split('@PATHCR@');
          return (
            <Icon key={falseKey} dOne={cashRebateIcon[0]} dTwo={cashRebateIcon[1]} dThree={cashRebateIcon[2]} className="grayIcon" incentiveName="cashRebate" /> 
          )
        }
        else if (iconObj[falseKey].includes('@PATHPARK@')) {
          let parkingIcon = iconObj[falseKey].split('@PATHPARK@');
          return (
            <Icon key={falseKey} dOne={parkingIcon[0]} dTwo={parkingIcon[1]} dThree={parkingIcon[2]} className="grayIcon" incentiveName="parking" /> 
          ) 
        }
        else if (iconObj[falseKey].includes('@TAXCREDIT@')) {
          let taxCreditIcon = iconObj[falseKey].split('@TAXCREDIT@');
          return (
            <Icon key={falseKey} dOne={taxCreditIcon[0]} dTwo={taxCreditIcon[1]} dThree={taxCreditIcon[2]} dFour={taxCreditIcon[3]} polygon={taxCreditIcon[4]} className="grayIcon" incentiveName="taxCredit" /> 
          )  
        }
        else {
          return (
            <Icon key={falseKey} d={iconObj[falseKey]} className="grayIcon"/>
          )
        }
      });
      iconsNode = trueNode.concat(falseNode);
    }

    //ELECTRIC VEHICLES
    else if (this.props.vehicleInfo !== undefined &&
      this.props.vehicleInfo.power === "Electric" &&
      this.props.stateInfo !== undefined) {
      var trueArr = [];
      var falseArr = [];
      for (var key in this.props.stateInfo.incentivesElectric) {
        if (this.props.stateInfo.incentivesElectric[key] === "true") {
          trueArr.push(key)
        }
        else {
          falseArr.push(key)
        }
      }
      var trueNode = trueArr.map((trueKey) => {
        if (iconObj[trueKey].includes('@POLYGONHOV@')) {
          let polygonIcon = iconObj[trueKey].split('@POLYGONHOV@');
          return (
            <Icon key={trueKey} d={polygonIcon[0]} points={polygonIcon[1]} polygon={polygonIcon[1]} className="greenIcon" incentiveName="hov" />
          )
        }
        else if (iconObj[trueKey].includes('@PATHCR@')) {
          let cashRebateIcon = iconObj[trueKey].split('@PATHCR@');
          return (
            <Icon key={trueKey} dOne={cashRebateIcon[0]} dTwo={cashRebateIcon[1]} dThree={cashRebateIcon[2]} className="greenIcon" incentiveName="cashRebate" /> 
          )
        }
        else if (iconObj[trueKey].includes('@PATHPARK@')) {
          let parkingIcon = iconObj[trueKey].split('@PATHPARK@');
          return (
            <Icon key={trueKey} dOne={parkingIcon[0]} dTwo={parkingIcon[1]} dThree={parkingIcon[2]} className="greenIcon" incentiveName="parking" /> 
          ) 
        }
        else if (iconObj[trueKey].includes('@TAXCREDIT@')) {
          let taxCreditIcon = iconObj[trueKey].split('@TAXCREDIT@');
          return (
            <Icon key={trueKey} dOne={taxCreditIcon[0]} dTwo={taxCreditIcon[1]} dThree={taxCreditIcon[2]} dFour={taxCreditIcon[3]} polygon={taxCreditIcon[4]} className="greenIcon" incentiveName="taxCredit" /> 
          )  
        }
        else {
          return (
            <Icon key={trueKey} d={iconObj[trueKey]} className="greenIcon"/>
          )
        }
      });
      var falseNode = falseArr.map((falseKey) => {
        if (iconObj[falseKey].includes('@POLYGONHOV@')) {
          let polygonIcon = iconObj[falseKey].split('@POLYGONHOV@');
          return (
            <Icon key={falseKey} d={polygonIcon[0]} points={polygonIcon[1]} polygon={polygonIcon[1]} className="grayIcon" incentiveName="hov" />
          )
        }
        else if (iconObj[falseKey].includes('@PATHCR@')) {
          let cashRebateIcon = iconObj[falseKey].split('@PATHCR@');
          return (
            <Icon key={falseKey} dOne={cashRebateIcon[0]} dTwo={cashRebateIcon[1]} dThree={cashRebateIcon[2]} className="grayIcon" incentiveName="cashRebate" /> 
          )
        }
        else if (iconObj[falseKey].includes('@PATHPARK@')) {
          let parkingIcon = iconObj[falseKey].split('@PATHPARK@');
          return (
            <Icon key={falseKey} dOne={parkingIcon[0]} dTwo={parkingIcon[1]} dThree={parkingIcon[2]} className="grayIcon" incentiveName="parking" /> 
          ) 
        }
        else if (iconObj[falseKey].includes('@TAXCREDIT@')) {
          let taxCreditIcon = iconObj[falseKey].split('@TAXCREDIT@');
          return (
            <Icon key={falseKey} dOne={taxCreditIcon[0]} dTwo={taxCreditIcon[1]} dThree={taxCreditIcon[2]} dFour={taxCreditIcon[3]} polygon={taxCreditIcon[4]} className="grayIcon" incentiveName="taxCredit" /> 
          )  
        }
        else {
          return (
            <Icon key={falseKey} d={iconObj[falseKey]} className="grayIcon"/>
          )
        }
        // return <Icon key={falseKey} source={iconObj[falseKey]} className="grayIcon" />
      });
      iconsNode = trueNode.concat(falseNode);
    }
    return (
      <div className="stateIncentiveIcons">
        {iconsNode}
      </div>
    )
  }
})

const Icon = React.createClass({
  render: function(){

    if (this.props.incentiveName === 'hov') {
      return (
        <div className="icons">
          <svg className={`${this.props.className} ${this.props.incentiveName}`} width="36px" height="36px">
            <path d={this.props.d} />
            <polygon points={this.props.points} />
          </svg>
          <div className="incentiveBox">
            <div className="triangle"></div>
            <div className='box'>
            </div>
          </div>
        </div>
      )
    }
    else if (this.props.incentiveName === 'cashRebate') {
      return (
        <div className="icons" >
          <svg className={`${this.props.className} ${this.props.incentiveName}`} width="36px" height="36px">
            <path d={this.props.dOne} />
            <path d={this.props.dTwo} />
            <path d={this.props.dThree} />
          </svg>
          <div className="incentiveBox">
            <div className="triangle"></div>
            <div className='box'>
            </div>
          </div>
        </div>
      )
    }
    else if (this.props.incentiveName === 'parking') {
      return (
        <div className="icons" >
          <svg className={`${this.props.className} ${this.props.incentiveName}`} width="36px" height="36px">
            <path d={this.props.dOne} />
            <path d={this.props.dTwo} />
            <path d={this.props.dThree} />
          </svg>
          <div className="incentiveBox">
            <div className="triangle"></div>
            <div className='box'>
            </div>
          </div>
        </div>
      )
    }
    else if (this.props.incentiveName === 'taxCredit') {
      return (
        <div className="icons" >
          <svg className={`${this.props.className} ${this.props.incentiveName}`} width="36px" height="36px">
            <path d={this.props.dOne} />
            <path d={this.props.dTwo} />
            <path d={this.props.dThree} />
            <path d={this.props.dFour} />
            <polygon points={this.props.polygon} />
          </svg>
          <div className="incentiveBox">
            <div className="triangle"></div>
            <div className='box'>
            </div>
          </div>
        </div>
      )
    }

    return (
      <div className="icons">
        <svg  className={this.props.className} width="36px" height="36px">
          <path d={this.props.d} />
        </svg>
        <div className="incentiveBox">
          <div className="triangle"></div>
          <div className='box'>
          </div>
        </div>
      </div>
    )
  }
})

export default StateIncentives;
          // <path d={this.props.source} className={this.props.className} />
        // <img src={this.props.source} className={this.props.className} />